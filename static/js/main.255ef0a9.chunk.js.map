{"version":3,"sources":["assets/undraw_interaction_design_odgc.svg","assets/logo.png","store/reducers/userReducer.js","store/actions/userActions.js","store/reducers/index.js","store/index.js","config/config.js","components/global/Spinner.js","views/Login.js","views/AdminDashboard.js","views/EmployeeDashboard.js","views/AppNavigator.js","App.js","index.js"],"names":["module","exports","initialState","userData","JSON","parse","localStorage","getItem","isLoggedIn","userReducer","state","action","type","payload","appReducer","combineReducers","rootReducer","store","createStore","url","Spinner","props","layoutSize","height","spinnerHeight","width","spinnerWidth","border","borderTop","Wrapper","className","style","this","Component","styled","div","Login","handleChange","e","setState","message","email","target","value","password","handleLogin","preventDefault","isValidEmail","isLoading","signInUrl","fetch","method","body","stringify","then","response","json","a","hasOwnProperty","status","data","sessionStorage","setItem","history","push","catch","err","console","log","test","src","logo","alt","icon","placeholder","onChange","onClick","bgImage","connect","dispatch","populateUserData","AdminDashboard","EmployeeDashboard","AppNavigator","accessLevel","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.255ef0a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_interaction_design_odgc.dbc96d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3680027d.png\";","import * as Actions from '../actions'\r\n\r\nconst initialState = {\r\n    userData: JSON.parse(localStorage.getItem('userData')) || {},\r\n    isLoggedIn: false\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.POPULATE_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                userData: action.payload,\r\n                isLoggedIn: !state.isLoggedIn\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer","export const POPULATE_USER_DATA = 'POPULATE_USER_DATA'\r\n\r\nexport const populateUserData = value => ({\r\n    type: POPULATE_USER_DATA,\r\n    payload: value\r\n})","import { combineReducers } from 'redux'\r\nimport userReducer from './userReducer'\r\n\r\nconst appReducer = combineReducers({\r\n    userReducer: userReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","export const url = 'https://teamwork-a.herokuapp.com'","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nclass Spinner extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    layoutSize = () => {\r\n        return {\r\n            height: this.props.spinnerHeight,\r\n            width: this.props.spinnerWidth,\r\n            border: `${this.props.border}px solid #f3f3f3`,\r\n            borderTop: `${this.props.border}px solid #3892e9`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <div className=\"spinner-layout\">\r\n                    <div className=\"loader\" style={this.layoutSize()}></div>\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Spinner\r\n\r\nconst Wrapper = styled.div`\r\n.spinner-layout{\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .loader {\r\n    border-radius: 50%;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n}\r\n`","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialIcon, { colorPalette } from 'material-icons-react';\r\nimport styled from 'styled-components'\r\nimport bgImage from '../assets/undraw_interaction_design_odgc.svg'\r\nimport logo from '../assets/logo.png'\r\nimport { url } from '../config/config'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { populateUserData } from '../store/actions'\r\nimport Spinner from '../components/global/Spinner'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            message: '',\r\n            email: '',\r\n            password: '',\r\n            userData: JSON.parse(sessionStorage.getItem('userData')),\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.userData) {\r\n            // window.location.replace(\"/\")\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    handleChange = (type, e) => {\r\n        if (type === 'email') {\r\n            this.setState({\r\n                message: '',\r\n                email: e.target.value\r\n            })\r\n        } else if (type === 'password') {\r\n            this.setState({\r\n                message: '',\r\n                password: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    handleLogin = (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.email) {\r\n            this.setState({\r\n                message: 'Email cannot be empty'\r\n            })\r\n        } else if (!this.state.password) {\r\n            this.setState({\r\n                message: 'Password cannot be empty'\r\n            })\r\n        } else {\r\n            if (!this.isValidEmail(this.state.email)) {\r\n                this.setState({\r\n                    message: 'Please enter a valid email address'\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    isLoading: true\r\n                })\r\n                const signInUrl = url + '/api/v1/auth/signin'\r\n                const email = this.state.email\r\n                const password = this.state.password\r\n                fetch(signInUrl, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({ email, password })\r\n                }).then(response => {\r\n                    return response.json()\r\n                }).then(async value => {\r\n                    if (value.hasOwnProperty('status')) {\r\n                        const { status, data } = value\r\n                        if (status === 'success') {\r\n                            // await this.props.populateUserData(data)\r\n                            await sessionStorage.setItem('userData', JSON.stringify(data))\r\n                            // window.location.replace(\"/\")\r\n                            this.props.history.push('/')\r\n                        } else {\r\n                            this.setState({\r\n                                message: 'Invalid login',\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    } else {\r\n                        this.setState({\r\n                            message: 'Invalid login',\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                }).catch(err => console.log(err))\r\n            }\r\n        }\r\n    }\r\n\r\n    isValidEmail = (email) => {\r\n        const re = /\\S+@\\S+\\.\\S+/;\r\n        return re.test(email);\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Wrapper>\r\n                <div className='login-container'>\r\n                    <div className=\"f-div\">\r\n                        <img src={logo} alt=\"App Logo\" className=\"appLogo\" />\r\n                        <div className=\"form-container\">\r\n                            <span>Sign In</span>\r\n                            <form>\r\n                                <span className=\"message-div\">{this.state.message}</span>\r\n                                <div>\r\n                                    <MaterialIcon icon=\"person\" />\r\n                                    <input type=\"email\" placeholder=\"Email\" value={this.state.email}\r\n                                        onChange={e => this.handleChange('email', e)} />\r\n                                </div>\r\n                                <div>\r\n                                    <MaterialIcon icon=\"vpn_key\" />\r\n                                    <input type=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                                        onChange={e => this.handleChange('password', e)} />\r\n                                </div>\r\n                                <button className={`${this.state.isLoading ? 'disabled-btn' : ''}`} onClick={e => this.handleLogin(e)}>\r\n                                    {this.state.isLoading ?\r\n                                        <Spinner spinnerHeight={10} spinnerWidth={10} border={7} /> :\r\n                                        <div className=\"sign-in-text\">Sign In</div>\r\n                                    }\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"s-div\">\r\n                        <img src={bgImage} alt='Background Image' className=\"bgImage\" />\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.userReducer.isLoggedIn\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        populateUserData: (data) => {\r\n            dispatch(populateUserData(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)\r\n\r\nconst Wrapper = styled.div`\r\n    .login-container{\r\n        display:flex;\r\n        height:100vh;\r\n\r\n        .f-div{\r\n            width: 30%;\r\n            background-color:#294ba1;\r\n            display: flex;\r\n            flex-direction:column;\r\n            align-items: center;\r\n\r\n            .appLogo{\r\n                width: 80px;\r\n                height: 80px;\r\n                border-radius: 50%;\r\n                margin: 50px 0 100px;\r\n            }\r\n\r\n            .form-container{\r\n                display: flex;\r\n                flex-direction:column;\r\n                align-items: center;\r\n                >span:nth-child(1){\r\n                    color: #fff;\r\n                    font-size: 18px;\r\n                    font-family: Arial;\r\n                    margin-bottom: 50px;\r\n                }\r\n\r\n                >form{\r\n                    display: flex;\r\n                    flex-direction:column;\r\n                    width: 100%;\r\n\r\n                    .message-div{\r\n                        display:block;\r\n                        color: #f44336;\r\n                        text-align:center;\r\n                        font-size: 14px;\r\n                        margin-bottom: 3px;\r\n                    }\r\n\r\n                    >div{\r\n                        display: flex;\r\n                        background-color: #fff;\r\n                        border:1px solid #ccc;\r\n                        border-radius:3px;\r\n                        padding: 3px;\r\n                        margin-bottom:20px;\r\n\r\n                            input{\r\n                            border:none;\r\n                            outline:none;\r\n                            padding: 5px 7px;\r\n                            font-size: 16px;\r\n                        }\r\n\r\n                    }\r\n\r\n                    >button{\r\n                        margin-top: 30px;\r\n                        padding: 7px 0;\r\n                        font-weight: bold;\r\n                        font-size: 16px;\r\n                        color:#294ba1;\r\n                        background-color: #fff;\r\n                        outline:none;\r\n                        border:1px solid transparent;\r\n                        border-radius:3px;\r\n                        &:hover{\r\n                            background-color:#294ba1;\r\n                            color: #fff;\r\n                            border: 1px solid #fff;\r\n                        }\r\n                    }\r\n\r\n                    .disabled-btn{\r\n                        pointer-events: none;\r\n                    }\r\n\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n        .s-div{\r\n            width: 60%;\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            .bgImage{\r\n                height: 50%;\r\n                width:50%;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @media(max-width: 840px){\r\n        .f-div{\r\n            width: 50% !important;\r\n        }\r\n\r\n        .s-div{\r\n            width: 50% !important;\r\n\r\n        }\r\n    }\r\n\r\n    @media(max-width: 520px){\r\n        .f-div{\r\n            width: 100% !important;\r\n        }\r\n\r\n        .s-div{\r\n            display:none !important;\r\n        }\r\n    }\r\n`","import React, { Component } from 'react'\r\n\r\nclass AdminDashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>AdminDashboard</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminDashboard","import React, { Component } from 'react'\r\n\r\nclass EmployeeDashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>EmployeeDashboard</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeDashboard","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AdminDashboard from './AdminDashboard'\r\nimport EmployeeDashboard from './EmployeeDashboard'\r\n\r\nclass AppNavigator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userData: JSON.parse(sessionStorage.getItem('userData'))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.userData) {\r\n            // window.location.replace(\"/login\")\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.state.userData && this.state.userData.accessLevel === 'admin' ? (\r\n                    <AdminDashboard />\r\n                ) : this.state.userData && this.state.userData.accessLevel === 'employee' ? (\r\n                    <EmployeeDashboard />\r\n                ) : null\r\n\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.userReducer.userData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppNavigator)","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Login from './views/Login'\r\nimport AppNavigator from './views/AppNavigator'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route exact path=\"/\" component={AppNavigator} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}